import io;
class Simple {

    int field_1;
    Foo mc;
    int[] ll;

    public static void main(String[] args) {
    Foo lc;
    Simple s;
    io.println(new Simple().lol(10));

        //field_1 = this.lol(1);
        //field_1 = s.lol(1);
        //io.println(this.lol(1));
        //io.println(mc);
        //io.println(lc);
    }

   public int lol(int pos) {
           int[] arr;
           int aux;

           arr = new int[10];
           arr[pos] = 3;

           aux = arr[pos];

           arr[pos + 1] = arr[pos-1] * 3  ;

           return aux;
   }


    public int func2(){
        int i;
        int a;
        boolean b;

        b = true;
        a = 0;

        if (4 < 3 ) {
            i = 1;
        }else{
            i = 2;
        }

        a = this.max(i,0);

        io.println(a);

        a = b;
        io.println(a);

        return 0;
    }

    public static void main(String[] args){
        int i;
        int b;
        int a;

        a = 15;

        b = 0;
        i = 0;

        while (i < a) {
            b = b + 1;
            i = i + 1;
        }

        io.println(b);
    }



    public int lol(int pos) {
        int[] arr;
        int aux;

        arr = new int[10];
        arr[pos] = 3;

        aux = arr[pos];

        arr[pos + 1] = arr[pos-1] * 3  ;

        return aux;
    }

    public int whileTest(int a) {
        int i;
           int b;

           b = 0;
           i = 0;

           while (i < a) {
               b = b + 1;
               i = i + 1;
           }

           return b;
    }


/*
    public Foo getFoo(){
        Foo foo;
        foo = new Foo(); // todo: da problemas... ricardo :/
        return foo;
     }

    public int main7() {
        int i;
        int[] b;
       //  b = new int[10];
       // i = b[i];
       ll[i] = 1;
       // io.println(ll[i]); ... vai se ter que criar uma temp
    }

    public int foo(int[] d) {
        int[] c;
        d[0] = 1;
        ll[0] = 1;
        //c = new int[10];
        //c[0] = 1;
        return c;
    }
  */
}

