

Simple {
.field public i.i32;

.construct Simple().V {
invokespecial(this, "<init>").V;
}
.method public setI(newI.i32).i32 {


putfield(this,i.i32, $1.newI.i32).V;


ret.i32 0.i32;
}.method public getI().i32 {
t0.i32 :=.i32 getfield(this,i.i32).i32;

ret.i32 t0.i32;
}.method public negative(i.i32).bool {



t1.bool :=.bool $1.i.i32 <.bool 0.i32;
ret.bool t1.bool;
}.method public abs(i.i32).i32 {



t2.bool :=.bool $1.i.i32 <.bool 0.i32;
if (t2.bool) goto Then0;

goto End0;
Then0:


t3.i32 :=.i32 0.i32 -.i32 $1.i.i32;
$1.i.i32 :=.i32 t3.i32;

End0:


ret.i32 $1.i.i32;
}.method public sum(a.i32, b.i32).i32 {



t4.i32 :=.i32 $1.a.i32 +.i32 $2.b.i32;
ret.i32 t4.i32;
}.method public max(a.i32, b.i32).i32 {
temp.i32 :=.i32 0.i32;




t5.bool :=.bool $2.b.i32 <.bool $1.a.i32;
if (t5.bool) goto Then1;

temp.i32 :=.i32 $2.b.i32;

goto End1;
Then1:

temp.i32 :=.i32 $1.a.i32;

End1:


ret.i32 temp.i32;
}
.method public static main(args.array.String).V {
a.i32 :=.i32 0.i32;
i.i32 :=.i32 0.i32;



a.i32 :=.i32 0.i32;



t6.bool :=.bool 4.i32 <.bool 3.i32;
if (t6.bool) goto Then2;

i.i32 :=.i32 2.i32;

goto End2;
Then2:

i.i32 :=.i32 1.i32;

End2:


invokestatic(io, "println", i.i32).V;


t7.i32 :=.i32 invokevirtual(this,"max", 1.i32, a.i32).i32;
a.i32 :=.i32 t7.i32;


invokestatic(io, "println", a.i32).V;
ret.V;
}

}





























/*
myClass {
	// .field private a.i32;


	.method public sum(i.i32).i32 {

    		if (i.i32 <.bool 3.i32) goto LTrue;
    		    sum.i32 :=.i32 0.i32;
    		    goto End;
        	LTrue:
        	    sum.i32 :=.i32 1.i32;
    		End:
    		    ret.i32 sum.i32;
    	}

   .method public obj(bk.String).V{
     a.Foo :=.Foo new(Foo).Foo;

        invokespecial(a.Foo, "<init>", 2.i32).V;







   }


   .method public virt().V{

       invokevirtual(c1.myClass, "put", 2.i32).V;
       invokestatic(ExMain, "mult", 2.i32, 5.i32).i32;



       aux1.Fac :=.Fac new(Fac).Fac;

       invokespecial(aux1.Fac,"<init>", 2.i32).V;



   }


    	.method public check(A.array.classArray, b.String).bool {
    		all.bool :=.bool 0.bool;
    		l.String :=.String b.String;

    		a.i32 :=.i32 0.i32;

    		t1.i32 :=.i32 getfield(this, a.i32).i32;
            putfield(this, a.i32, 3.i32).V;

            // aux1.Fac :=.Fac new(Fac).Fac;
            // invokespecial(aux1.Fac,"<init>").V;


            // k.array.i32 :=.array.i32 newarray(3.i32).array.i32;


    		// a.i32 :=.i32 69.i32;

    		// c.Foo :=.Foo $2.b.Foo;
    		// invokevirtual (c.Foo,"test",$1.A.array.classArray).V;

    		// b.bool :=.bool !.bool false.bool;

    		invokestatic(io,"println", l.String).V;

    		ret.bool all.bool;
    	}


	.construct myClass(n.i32).V {
 		invokespecial(this, "<init>").V;
		putfield(this, a.i32, $1.n.i32).V;
	}

	.construct myClass().V {
 		invokespecial(this, "<init>").V;
	}



    .method public static main(args.array.String).V {
        a.i32 :=.i32 0.i32;
        i.i32 :=.i32 0.i32;

        a.i32 :=.i32 0.i32;


        t0.bool :=.bool 1.bool <.bool 0.bool;
        if (t0.bool) goto Then0;

        goto End0;
        Then0:

        i.i32 :=.i32 1.i32;

        End0:

        invokestatic(io, "println", i.i32).V;

        ret.V;
    }
}
*/

