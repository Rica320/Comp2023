import io;

Simple {
.field public field_1.i32;

.construct Simple().V {
invokespecial(this, "<init>").V;
}

.method public static main(args.array.String).V {

                val.i32 :=.i32 0.i32;

                t0.Simple :=.Simple new(Simple).Simple;
                invokespecial(t0.Simple, "<init>").V;
                s.Simple :=.Simple t0.Simple;

                t1.i32 :=.i32 invokevirtual(s.Simple, "setI", 5.i32).i32;
                val.i32 :=.i32 t1.i32;


                t2.i32 :=.i32 invokevirtual(s.Simple, "getI").i32;
                val.i32 :=.i32 t2.i32;



                invokestatic(io, "println", val.i32).V;
                ret.V;
}
.method public setI(newI.i32).i32 {


putfield(this,field_1.i32, $1.newI.i32).V;


ret.i32 0.i32;
}.method public getI().i32 {
t3.i32 :=.i32 getfield(this,field_1.i32).i32;

ret.i32 t3.i32;
}
}