import io;
import GetterAndSetter;

Simple extends GetterAndSetter {

.construct Simple().V {
    invokespecial(this, "<init>").V;
    }


.method public func().i32 {

    ret.i32 4.i32;
}


.method public static main(args.array.String).V {

        s.Simple :=.Simple new(Simple).Simple;
        invokespecial(t0.Simple, "<init>").V; // ignorada!

         k.i32 :=.i32 invokevirtual(s.Simple, "setA", 5.i32).i32;

        k.i32 :=.i32 invokevirtual(s.Simple, "getA").i32;

        invokestatic(io, "println", k.i32).V;

        ret.V;
    }




}
